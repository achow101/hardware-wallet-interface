# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class BTCCoin(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCCoin: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCCoin]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCCoin]]: ...
    BTC = typing___cast(BTCCoin, 0)
    TBTC = typing___cast(BTCCoin, 1)
    LTC = typing___cast(BTCCoin, 2)
    TLTC = typing___cast(BTCCoin, 3)
BTC = typing___cast(BTCCoin, 0)
TBTC = typing___cast(BTCCoin, 1)
LTC = typing___cast(BTCCoin, 2)
TLTC = typing___cast(BTCCoin, 3)

class BTCScriptType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCScriptType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCScriptType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCScriptType]]: ...
    SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
    SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
    SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
    SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)
SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)

class BTCOutputType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCOutputType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCOutputType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCOutputType]]: ...
    UNKNOWN = typing___cast(BTCOutputType, 0)
    P2PKH = typing___cast(BTCOutputType, 1)
    P2SH = typing___cast(BTCOutputType, 2)
    P2WPKH = typing___cast(BTCOutputType, 3)
    P2WSH = typing___cast(BTCOutputType, 4)
UNKNOWN = typing___cast(BTCOutputType, 0)
P2PKH = typing___cast(BTCOutputType, 1)
P2SH = typing___cast(BTCOutputType, 2)
P2WPKH = typing___cast(BTCOutputType, 3)
P2WSH = typing___cast(BTCOutputType, 4)

class ETHCoin(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> ETHCoin: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[ETHCoin]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, ETHCoin]]: ...
    ETH = typing___cast(ETHCoin, 0)
    RopstenETH = typing___cast(ETHCoin, 1)
    RinkebyETH = typing___cast(ETHCoin, 2)
ETH = typing___cast(ETHCoin, 0)
RopstenETH = typing___cast(ETHCoin, 1)
RinkebyETH = typing___cast(ETHCoin, 2)

class Error(google___protobuf___message___Message):
    code = ... # type: int
    message = ... # type: typing___Text

    def __init__(self,
        *,
        code : typing___Optional[int] = None,
        message : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Error: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"message"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code",u"message",b"message"]) -> None: ...

class Success(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Success: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class RandomNumberResponse(google___protobuf___message___Message):
    number = ... # type: bytes

    def __init__(self,
        *,
        number : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RandomNumberResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"number"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"number",b"number"]) -> None: ...

class RandomNumberRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RandomNumberRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class DeviceInfoRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeviceInfoRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class DeviceInfoResponse(google___protobuf___message___Message):
    name = ... # type: typing___Text
    initialized = ... # type: bool
    version = ... # type: typing___Text
    mnemonic_passphrase_enabled = ... # type: bool
    monotonic_increments_remaining = ... # type: int

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        initialized : typing___Optional[bool] = None,
        version : typing___Optional[typing___Text] = None,
        mnemonic_passphrase_enabled : typing___Optional[bool] = None,
        monotonic_increments_remaining : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DeviceInfoResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"initialized",u"mnemonic_passphrase_enabled",u"monotonic_increments_remaining",u"name",u"version"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"initialized",b"initialized",u"mnemonic_passphrase_enabled",b"mnemonic_passphrase_enabled",u"monotonic_increments_remaining",b"monotonic_increments_remaining",u"name",b"name",u"version",b"version"]) -> None: ...

class SetDeviceNameRequest(google___protobuf___message___Message):
    name = ... # type: typing___Text

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetDeviceNameRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"name"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name"]) -> None: ...

class SetDeviceLanguageRequest(google___protobuf___message___Message):
    language = ... # type: typing___Text

    def __init__(self,
        *,
        language : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetDeviceLanguageRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"language"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"language",b"language"]) -> None: ...

class SetPasswordRequest(google___protobuf___message___Message):
    entropy = ... # type: bytes

    def __init__(self,
        *,
        entropy : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetPasswordRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"entropy"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"entropy",b"entropy"]) -> None: ...

class CreateBackupRequest(google___protobuf___message___Message):
    timestamp = ... # type: int
    timezone_offset = ... # type: int

    def __init__(self,
        *,
        timestamp : typing___Optional[int] = None,
        timezone_offset : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CreateBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"timestamp",u"timezone_offset"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"timestamp",b"timestamp",u"timezone_offset",b"timezone_offset"]) -> None: ...

class RestoreBackupRequest(google___protobuf___message___Message):
    id = ... # type: typing___Text

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RestoreBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...

class ListBackupsRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListBackupsRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CheckBackupRequest(google___protobuf___message___Message):
    silent = ... # type: bool

    def __init__(self,
        *,
        silent : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckBackupRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"silent"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"silent",b"silent"]) -> None: ...

class CheckBackupResponse(google___protobuf___message___Message):
    id = ... # type: typing___Text

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckBackupResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"id"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...

class ShowMnemonicRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ShowMnemonicRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class InsertRemoveSDCardRequest(google___protobuf___message___Message):
    class SDCardAction(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> InsertRemoveSDCardRequest.SDCardAction: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[InsertRemoveSDCardRequest.SDCardAction]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, InsertRemoveSDCardRequest.SDCardAction]]: ...
        REMOVE_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 0)
        INSERT_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 1)
    REMOVE_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 0)
    INSERT_CARD = typing___cast(InsertRemoveSDCardRequest.SDCardAction, 1)

    action = ... # type: InsertRemoveSDCardRequest.SDCardAction

    def __init__(self,
        *,
        action : typing___Optional[InsertRemoveSDCardRequest.SDCardAction] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> InsertRemoveSDCardRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"action"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action"]) -> None: ...

class CheckSDCardRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckSDCardRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class CheckSDCardResponse(google___protobuf___message___Message):
    inserted = ... # type: bool

    def __init__(self,
        *,
        inserted : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> CheckSDCardResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"inserted"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"inserted",b"inserted"]) -> None: ...

class BTCPubRequest(google___protobuf___message___Message):
    class OutputType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCPubRequest.OutputType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCPubRequest.OutputType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCPubRequest.OutputType]]: ...
        TPUB = typing___cast(BTCPubRequest.OutputType, 0)
        XPUB = typing___cast(BTCPubRequest.OutputType, 1)
        YPUB = typing___cast(BTCPubRequest.OutputType, 2)
        ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
        ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)
    TPUB = typing___cast(BTCPubRequest.OutputType, 0)
    XPUB = typing___cast(BTCPubRequest.OutputType, 1)
    YPUB = typing___cast(BTCPubRequest.OutputType, 2)
    ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
    ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)

    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    script_type = ... # type: BTCScriptType
    coin = ... # type: BTCCoin
    output_type = ... # type: BTCPubRequest.OutputType
    display = ... # type: bool

    def __init__(self,
        *,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        script_type : typing___Optional[BTCScriptType] = None,
        coin : typing___Optional[BTCCoin] = None,
        output_type : typing___Optional[BTCPubRequest.OutputType] = None,
        display : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCPubRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",u"display",u"keypath",u"output_type",u"script_type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",b"coin",u"display",b"display",u"keypath",b"keypath",u"output_type",b"output_type",u"script_type",b"script_type"]) -> None: ...

class PubResponse(google___protobuf___message___Message):
    pub = ... # type: typing___Text

    def __init__(self,
        *,
        pub : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PubResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"pub"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"pub",b"pub"]) -> None: ...

class BackupInfo(google___protobuf___message___Message):
    id = ... # type: typing___Text
    timestamp = ... # type: int
    timezone_offset = ... # type: int
    name = ... # type: typing___Text

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        timestamp : typing___Optional[int] = None,
        timezone_offset : typing___Optional[int] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BackupInfo: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"id",u"name",u"timestamp",u"timezone_offset"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"timestamp",b"timestamp",u"timezone_offset",b"timezone_offset"]) -> None: ...

class ListBackupsResponse(google___protobuf___message___Message):

    @property
    def info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[BackupInfo]: ...

    def __init__(self,
        *,
        info : typing___Optional[typing___Iterable[BackupInfo]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ListBackupsResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"info"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"info",b"info"]) -> None: ...

class BTCSignInitRequest(google___protobuf___message___Message):
    coin = ... # type: BTCCoin
    script_type = ... # type: BTCScriptType
    bip44_account = ... # type: int
    version = ... # type: int
    num_inputs = ... # type: int
    num_outputs = ... # type: int
    locktime = ... # type: int

    def __init__(self,
        *,
        coin : typing___Optional[BTCCoin] = None,
        script_type : typing___Optional[BTCScriptType] = None,
        bip44_account : typing___Optional[int] = None,
        version : typing___Optional[int] = None,
        num_inputs : typing___Optional[int] = None,
        num_outputs : typing___Optional[int] = None,
        locktime : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInitRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"bip44_account",u"coin",u"locktime",u"num_inputs",u"num_outputs",u"script_type",u"version"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"bip44_account",b"bip44_account",u"coin",b"coin",u"locktime",b"locktime",u"num_inputs",b"num_inputs",u"num_outputs",b"num_outputs",u"script_type",b"script_type",u"version",b"version"]) -> None: ...

class BTCSignNextResponse(google___protobuf___message___Message):
    class Type(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCSignNextResponse.Type: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCSignNextResponse.Type]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCSignNextResponse.Type]]: ...
        INPUT = typing___cast(BTCSignNextResponse.Type, 0)
        OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
        DONE = typing___cast(BTCSignNextResponse.Type, 2)
    INPUT = typing___cast(BTCSignNextResponse.Type, 0)
    OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
    DONE = typing___cast(BTCSignNextResponse.Type, 2)

    type = ... # type: BTCSignNextResponse.Type
    index = ... # type: int
    has_signature = ... # type: bool
    signature = ... # type: bytes

    def __init__(self,
        *,
        type : typing___Optional[BTCSignNextResponse.Type] = None,
        index : typing___Optional[int] = None,
        has_signature : typing___Optional[bool] = None,
        signature : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignNextResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"has_signature",u"index",u"signature",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"has_signature",b"has_signature",u"index",b"index",u"signature",b"signature",u"type",b"type"]) -> None: ...

class BTCSignInputRequest(google___protobuf___message___Message):
    prevOutHash = ... # type: bytes
    prevOutIndex = ... # type: int
    prevOutValue = ... # type: int
    sequence = ... # type: int
    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]

    def __init__(self,
        *,
        prevOutHash : typing___Optional[bytes] = None,
        prevOutIndex : typing___Optional[int] = None,
        prevOutValue : typing___Optional[int] = None,
        sequence : typing___Optional[int] = None,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"keypath",u"prevOutHash",u"prevOutIndex",u"prevOutValue",u"sequence"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"keypath",b"keypath",u"prevOutHash",b"prevOutHash",u"prevOutIndex",b"prevOutIndex",u"prevOutValue",b"prevOutValue",u"sequence",b"sequence"]) -> None: ...

class BTCSignOutputRequest(google___protobuf___message___Message):
    ours = ... # type: bool
    type = ... # type: BTCOutputType
    value = ... # type: int
    hash = ... # type: bytes
    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]

    def __init__(self,
        *,
        ours : typing___Optional[bool] = None,
        type : typing___Optional[BTCOutputType] = None,
        value : typing___Optional[int] = None,
        hash : typing___Optional[bytes] = None,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignOutputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"hash",u"keypath",u"ours",u"type",u"value"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"hash",b"hash",u"keypath",b"keypath",u"ours",b"ours",u"type",b"type",u"value",b"value"]) -> None: ...

class SetMnemonicPassphraseEnabledRequest(google___protobuf___message___Message):
    enabled = ... # type: bool

    def __init__(self,
        *,
        enabled : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SetMnemonicPassphraseEnabledRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"enabled"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"enabled",b"enabled"]) -> None: ...

class PerformAttestationRequest(google___protobuf___message___Message):
    challenge = ... # type: bytes

    def __init__(self,
        *,
        challenge : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PerformAttestationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"challenge"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"challenge",b"challenge"]) -> None: ...

class PerformAttestationResponse(google___protobuf___message___Message):
    bootloader_hash = ... # type: bytes
    device_pubkey = ... # type: bytes
    certificate = ... # type: bytes
    root_pubkey_identifier = ... # type: bytes
    challenge_signature = ... # type: bytes

    def __init__(self,
        *,
        bootloader_hash : typing___Optional[bytes] = None,
        device_pubkey : typing___Optional[bytes] = None,
        certificate : typing___Optional[bytes] = None,
        root_pubkey_identifier : typing___Optional[bytes] = None,
        challenge_signature : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PerformAttestationResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"bootloader_hash",u"certificate",u"challenge_signature",u"device_pubkey",u"root_pubkey_identifier"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"bootloader_hash",b"bootloader_hash",u"certificate",b"certificate",u"challenge_signature",b"challenge_signature",u"device_pubkey",b"device_pubkey",u"root_pubkey_identifier",b"root_pubkey_identifier"]) -> None: ...

class RebootRequest(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RebootRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class ETHPubRequest(google___protobuf___message___Message):
    class OutputType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> ETHPubRequest.OutputType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[ETHPubRequest.OutputType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, ETHPubRequest.OutputType]]: ...
        ADDRESS = typing___cast(ETHPubRequest.OutputType, 0)
        XPUB = typing___cast(ETHPubRequest.OutputType, 1)
    ADDRESS = typing___cast(ETHPubRequest.OutputType, 0)
    XPUB = typing___cast(ETHPubRequest.OutputType, 1)

    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    coin = ... # type: ETHCoin
    output_type = ... # type: ETHPubRequest.OutputType
    display = ... # type: bool

    def __init__(self,
        *,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        coin : typing___Optional[ETHCoin] = None,
        output_type : typing___Optional[ETHPubRequest.OutputType] = None,
        display : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHPubRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",u"display",u"keypath",u"output_type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",b"coin",u"display",b"display",u"keypath",b"keypath",u"output_type",b"output_type"]) -> None: ...

class ETHSignRequest(google___protobuf___message___Message):
    coin = ... # type: ETHCoin
    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    nonce = ... # type: bytes
    gas_price = ... # type: bytes
    gas_limit = ... # type: bytes
    recipient = ... # type: bytes
    value = ... # type: bytes
    data = ... # type: bytes

    def __init__(self,
        *,
        coin : typing___Optional[ETHCoin] = None,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        nonce : typing___Optional[bytes] = None,
        gas_price : typing___Optional[bytes] = None,
        gas_limit : typing___Optional[bytes] = None,
        recipient : typing___Optional[bytes] = None,
        value : typing___Optional[bytes] = None,
        data : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHSignRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",u"data",u"gas_limit",u"gas_price",u"keypath",u"nonce",u"recipient",u"value"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",b"coin",u"data",b"data",u"gas_limit",b"gas_limit",u"gas_price",b"gas_price",u"keypath",b"keypath",u"nonce",b"nonce",u"recipient",b"recipient",u"value",b"value"]) -> None: ...

class ETHSignResponse(google___protobuf___message___Message):
    signature = ... # type: bytes

    def __init__(self,
        *,
        signature : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHSignResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"signature"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"signature",b"signature"]) -> None: ...

class ETHRequest(google___protobuf___message___Message):

    @property
    def pub(self) -> ETHPubRequest: ...

    @property
    def sign(self) -> ETHSignRequest: ...

    def __init__(self,
        *,
        pub : typing___Optional[ETHPubRequest] = None,
        sign : typing___Optional[ETHSignRequest] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"pub",u"request",u"sign"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pub",u"request",u"sign"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"pub",b"pub",u"request",b"request",u"sign",b"sign"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pub",b"pub",u"request",b"request",u"sign",b"sign"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"request",b"request"]) -> typing_extensions___Literal["pub","sign"]: ...

class ETHResponse(google___protobuf___message___Message):

    @property
    def pub(self) -> PubResponse: ...

    @property
    def sign(self) -> ETHSignResponse: ...

    def __init__(self,
        *,
        pub : typing___Optional[PubResponse] = None,
        sign : typing___Optional[ETHSignResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ETHResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"pub",u"response",u"sign"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pub",u"response",u"sign"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"pub",b"pub",u"response",b"response",u"sign",b"sign"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pub",b"pub",u"response",b"response",u"sign",b"sign"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"response",b"response"]) -> typing_extensions___Literal["pub","sign"]: ...

class Request(google___protobuf___message___Message):

    @property
    def random_number(self) -> RandomNumberRequest: ...

    @property
    def device_name(self) -> SetDeviceNameRequest: ...

    @property
    def device_language(self) -> SetDeviceLanguageRequest: ...

    @property
    def device_info(self) -> DeviceInfoRequest: ...

    @property
    def set_password(self) -> SetPasswordRequest: ...

    @property
    def create_backup(self) -> CreateBackupRequest: ...

    @property
    def show_mnemonic(self) -> ShowMnemonicRequest: ...

    @property
    def btc_pub(self) -> BTCPubRequest: ...

    @property
    def btc_sign_init(self) -> BTCSignInitRequest: ...

    @property
    def btc_sign_input(self) -> BTCSignInputRequest: ...

    @property
    def btc_sign_output(self) -> BTCSignOutputRequest: ...

    @property
    def insert_remove_sdcard(self) -> InsertRemoveSDCardRequest: ...

    @property
    def check_sdcard(self) -> CheckSDCardRequest: ...

    @property
    def set_mnemonic_passphrase_enabled(self) -> SetMnemonicPassphraseEnabledRequest: ...

    @property
    def list_backups(self) -> ListBackupsRequest: ...

    @property
    def restore_backup(self) -> RestoreBackupRequest: ...

    @property
    def perform_attestation(self) -> PerformAttestationRequest: ...

    @property
    def reboot(self) -> RebootRequest: ...

    @property
    def check_backup(self) -> CheckBackupRequest: ...

    @property
    def eth(self) -> ETHRequest: ...

    def __init__(self,
        *,
        random_number : typing___Optional[RandomNumberRequest] = None,
        device_name : typing___Optional[SetDeviceNameRequest] = None,
        device_language : typing___Optional[SetDeviceLanguageRequest] = None,
        device_info : typing___Optional[DeviceInfoRequest] = None,
        set_password : typing___Optional[SetPasswordRequest] = None,
        create_backup : typing___Optional[CreateBackupRequest] = None,
        show_mnemonic : typing___Optional[ShowMnemonicRequest] = None,
        btc_pub : typing___Optional[BTCPubRequest] = None,
        btc_sign_init : typing___Optional[BTCSignInitRequest] = None,
        btc_sign_input : typing___Optional[BTCSignInputRequest] = None,
        btc_sign_output : typing___Optional[BTCSignOutputRequest] = None,
        insert_remove_sdcard : typing___Optional[InsertRemoveSDCardRequest] = None,
        check_sdcard : typing___Optional[CheckSDCardRequest] = None,
        set_mnemonic_passphrase_enabled : typing___Optional[SetMnemonicPassphraseEnabledRequest] = None,
        list_backups : typing___Optional[ListBackupsRequest] = None,
        restore_backup : typing___Optional[RestoreBackupRequest] = None,
        perform_attestation : typing___Optional[PerformAttestationRequest] = None,
        reboot : typing___Optional[RebootRequest] = None,
        check_backup : typing___Optional[CheckBackupRequest] = None,
        eth : typing___Optional[ETHRequest] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Request: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"btc_pub",u"btc_sign_init",u"btc_sign_input",u"btc_sign_output",u"check_backup",u"check_sdcard",u"create_backup",u"device_info",u"device_language",u"device_name",u"eth",u"insert_remove_sdcard",u"list_backups",u"perform_attestation",u"random_number",u"reboot",u"request",u"restore_backup",u"set_mnemonic_passphrase_enabled",u"set_password",u"show_mnemonic"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"btc_pub",u"btc_sign_init",u"btc_sign_input",u"btc_sign_output",u"check_backup",u"check_sdcard",u"create_backup",u"device_info",u"device_language",u"device_name",u"eth",u"insert_remove_sdcard",u"list_backups",u"perform_attestation",u"random_number",u"reboot",u"request",u"restore_backup",u"set_mnemonic_passphrase_enabled",u"set_password",u"show_mnemonic"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"btc_pub",b"btc_pub",u"btc_sign_init",b"btc_sign_init",u"btc_sign_input",b"btc_sign_input",u"btc_sign_output",b"btc_sign_output",u"check_backup",b"check_backup",u"check_sdcard",b"check_sdcard",u"create_backup",b"create_backup",u"device_info",b"device_info",u"device_language",b"device_language",u"device_name",b"device_name",u"eth",b"eth",u"insert_remove_sdcard",b"insert_remove_sdcard",u"list_backups",b"list_backups",u"perform_attestation",b"perform_attestation",u"random_number",b"random_number",u"reboot",b"reboot",u"request",b"request",u"restore_backup",b"restore_backup",u"set_mnemonic_passphrase_enabled",b"set_mnemonic_passphrase_enabled",u"set_password",b"set_password",u"show_mnemonic",b"show_mnemonic"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"btc_pub",b"btc_pub",u"btc_sign_init",b"btc_sign_init",u"btc_sign_input",b"btc_sign_input",u"btc_sign_output",b"btc_sign_output",u"check_backup",b"check_backup",u"check_sdcard",b"check_sdcard",u"create_backup",b"create_backup",u"device_info",b"device_info",u"device_language",b"device_language",u"device_name",b"device_name",u"eth",b"eth",u"insert_remove_sdcard",b"insert_remove_sdcard",u"list_backups",b"list_backups",u"perform_attestation",b"perform_attestation",u"random_number",b"random_number",u"reboot",b"reboot",u"request",b"request",u"restore_backup",b"restore_backup",u"set_mnemonic_passphrase_enabled",b"set_mnemonic_passphrase_enabled",u"set_password",b"set_password",u"show_mnemonic",b"show_mnemonic"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"request",b"request"]) -> typing_extensions___Literal["random_number","device_name","device_language","device_info","set_password","create_backup","show_mnemonic","btc_pub","btc_sign_init","btc_sign_input","btc_sign_output","insert_remove_sdcard","check_sdcard","set_mnemonic_passphrase_enabled","list_backups","restore_backup","perform_attestation","reboot","check_backup","eth"]: ...

class Response(google___protobuf___message___Message):

    @property
    def success(self) -> Success: ...

    @property
    def error(self) -> Error: ...

    @property
    def random_number(self) -> RandomNumberResponse: ...

    @property
    def device_info(self) -> DeviceInfoResponse: ...

    @property
    def pub(self) -> PubResponse: ...

    @property
    def btc_sign_next(self) -> BTCSignNextResponse: ...

    @property
    def list_backups(self) -> ListBackupsResponse: ...

    @property
    def check_backup(self) -> CheckBackupResponse: ...

    @property
    def perform_attestation(self) -> PerformAttestationResponse: ...

    @property
    def check_sdcard(self) -> CheckSDCardResponse: ...

    @property
    def eth(self) -> ETHResponse: ...

    def __init__(self,
        *,
        success : typing___Optional[Success] = None,
        error : typing___Optional[Error] = None,
        random_number : typing___Optional[RandomNumberResponse] = None,
        device_info : typing___Optional[DeviceInfoResponse] = None,
        pub : typing___Optional[PubResponse] = None,
        btc_sign_next : typing___Optional[BTCSignNextResponse] = None,
        list_backups : typing___Optional[ListBackupsResponse] = None,
        check_backup : typing___Optional[CheckBackupResponse] = None,
        perform_attestation : typing___Optional[PerformAttestationResponse] = None,
        check_sdcard : typing___Optional[CheckSDCardResponse] = None,
        eth : typing___Optional[ETHResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Response: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"btc_sign_next",u"check_backup",u"check_sdcard",u"device_info",u"error",u"eth",u"list_backups",u"perform_attestation",u"pub",u"random_number",u"response",u"success"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"btc_sign_next",u"check_backup",u"check_sdcard",u"device_info",u"error",u"eth",u"list_backups",u"perform_attestation",u"pub",u"random_number",u"response",u"success"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"btc_sign_next",b"btc_sign_next",u"check_backup",b"check_backup",u"check_sdcard",b"check_sdcard",u"device_info",b"device_info",u"error",b"error",u"eth",b"eth",u"list_backups",b"list_backups",u"perform_attestation",b"perform_attestation",u"pub",b"pub",u"random_number",b"random_number",u"response",b"response",u"success",b"success"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"btc_sign_next",b"btc_sign_next",u"check_backup",b"check_backup",u"check_sdcard",b"check_sdcard",u"device_info",b"device_info",u"error",b"error",u"eth",b"eth",u"list_backups",b"list_backups",u"perform_attestation",b"perform_attestation",u"pub",b"pub",u"random_number",b"random_number",u"response",b"response",u"success",b"success"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"response",b"response"]) -> typing_extensions___Literal["success","error","random_number","device_info","pub","btc_sign_next","list_backups","check_backup","perform_attestation","check_sdcard","eth"]: ...
